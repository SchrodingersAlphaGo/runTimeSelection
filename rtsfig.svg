<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="810px" preserveAspectRatio="none" style="width:1836px;height:810px;background:#FFFFFF;" version="1.1" viewBox="0 0 1836 810" width="1836px" zoomAndPan="magnify"><defs/><g><!--MD5=[d33d78e42ac6685bfc7a1d9bb77da4c0]
class FEAElementOneD--><g id="elem_FEAElementOneD"><rect fill="#F1F1F1" height="48" id="FEAElementOneD" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="147" x="902" y="66.5"/><ellipse cx="917" cy="82.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M915.5781,87.8594 Q913.7188,87.8594 912.625,86.4688 Q911.5313,85.0781 911.5313,82.0938 Q911.5313,79.5625 912.6953,77.9063 Q913.8594,76.25 915.8438,76.25 Q917.3125,76.25 917.7813,76.375 Q918.25,76.5781 918.25,76.5781 Q918.25,76.5781 918.25,76.5078 Q918.25,76.4375 918.8594,75.5156 L919.9063,79.1719 L918.5781,79.5781 Q918.1094,78.0313 917.4453,77.3672 Q916.7813,76.7031 915.7188,76.7031 Q915.3281,76.7031 914.5625,78.2344 Q913.7969,79.7656 913.7969,82.0156 Q913.7969,84.4844 914.4609,85.875 Q915.125,87.2656 915.6563,87.2656 Q916.7188,87.2656 917.4766,86.5 Q918.2344,85.7344 918.5781,84.0781 L919.9063,84.6719 Q919.5781,86.0781 918.6797,86.9688 Q917.7813,87.8594 915.5781,87.8594 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="931" y="88.9839">FEAElementOneD</text><line style="stroke:#181818;stroke-width:0.5;" x1="903" x2="1048" y1="98.5" y2="98.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="903" x2="1048" y1="106.5" y2="106.5"/></g><!--MD5=[c37ad2826c4d2b0b03ef2cbd322f09ab]
class FEAElementBase--><g id="elem_FEAElementBase"><rect codeLine="6" fill="#F1F1F1" height="550.0029" id="FEAElementBase" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="659" x="737" y="253"/><ellipse cx="1007.25" cy="269" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1005.8281,274.3594 Q1003.9688,274.3594 1002.875,272.9688 Q1001.7813,271.5781 1001.7813,268.5938 Q1001.7813,266.0625 1002.9453,264.4063 Q1004.1094,262.75 1006.0938,262.75 Q1007.5625,262.75 1008.0313,262.875 Q1008.5,263.0781 1008.5,263.0781 Q1008.5,263.0781 1008.5,263.0078 Q1008.5,262.9375 1009.1094,262.0156 L1010.1563,265.6719 L1008.8281,266.0781 Q1008.3594,264.5313 1007.6953,263.8672 Q1007.0313,263.2031 1005.9688,263.2031 Q1005.5781,263.2031 1004.8125,264.7344 Q1004.0469,266.2656 1004.0469,268.5156 Q1004.0469,270.9844 1004.7109,272.375 Q1005.375,273.7656 1005.9063,273.7656 Q1006.9688,273.7656 1007.7266,273 Q1008.4844,272.2344 1008.8281,270.5781 L1010.1563,271.1719 Q1009.8281,272.5781 1008.9297,273.4688 Q1008.0313,274.3594 1005.8281,274.3594 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="1027.75" y="275.4839">FEAElementBase</text><line style="stroke:#181818;stroke-width:0.5;" x1="738" x2="1395" y1="285" y2="285"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="224" x="743" y="328.1641">declareRunTimeNewSelectionTable</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="738" x2="1043.5" y1="302.5601" y2="302.5601"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="46" x="1043.5" y="308.5439">macros</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1089.5" x2="1395" y1="302.5601" y2="302.5601"/><ellipse cx="748" cy="413.2207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="256" x="757" y="370.4043">std::unique_ptr&lt;FEAElementBase&gt; New(</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="143" x="757" y="389.5244">const std::string &amp; dim,</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="156" x="757" y="408.6445">const std::string &amp; name,</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="140" x="757" y="427.7646">const MaterialEle &amp; m,</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="145" x="757" y="446.8848">const GeometryEle &amp; g</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="9" x="757" y="466.0049">);</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="738" x2="939.5" y1="344.8003" y2="344.8003"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="254" x="939.5" y="350.7842">方法1:在KV表格中查找子类构造函数指针</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1193.5" x2="1395" y1="344.8003" y2="344.8003"/><polygon fill="#FFFF44" points="748,498.2612,752,502.2612,748,506.2612,744,502.2612" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="205" x="757" y="508.2451">void infoAboutThisElement() = 0;</text><polygon fill="#FFFF44" points="748,517.3813,752,521.3813,748,525.3813,744,521.3813" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="187" x="757" y="527.3652">void constructGeometry() = 0;</text><polygon fill="#FFFF44" points="748,536.5015,752,540.5015,748,544.5015,744,540.5015" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="195" x="757" y="546.4854">void constructBaseMatrix() = 0;</text><polygon fill="#FFFF44" points="748,555.6216,752,559.6216,748,563.6216,744,559.6216" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="185" x="757" y="565.6055">void transformToGlobal() = 0;</text><polygon fill="#FFFF44" points="748,574.7417,752,578.7417,748,582.7417,744,578.7417" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="179" x="757" y="584.7256">void numberSequence() = 0;</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="738" x2="1031.5" y1="482.6411" y2="482.6411"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="1031.5" y="488.625">方法：接口</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1101.5" x2="1395" y1="482.6411" y2="482.6411"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="436" x="743" y="626.9658">typedef unique_ptr&lt;baseType&gt; (*argNames##ConstructorPtr)argList;</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="738" x2="1024.5" y1="601.3618" y2="601.3618"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="1024.5" y="607.3457">构造函数指针</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1108.5" x2="1395" y1="601.3618" y2="601.3618"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="647" x="743" y="669.2061">typedef std::unordered_map&lt;std::string,argNames##ConstructorPtr&gt;     argNames##ConstructorTable;</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="738" x2="907" y1="643.6021" y2="643.6021"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="319" x="907" y="649.5859">子类构造函数指针KV列表(K:V-&gt;名字:构造函数指针)</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1226" x2="1395" y1="643.6021" y2="643.6021"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="419" x="743" y="711.4463">argNames##ConstructorTable* argNames##ConstructorTablePtr_;</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="738" x2="1038.5" y1="685.8423" y2="685.8423"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="1038.5" y="691.8262">定义数据</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1094.5" x2="1395" y1="685.8423" y2="685.8423"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="315" x="743" y="753.6865">void construct##argNames##ConstructorTables();</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="738" x2="1024.5" y1="728.0825" y2="728.0825"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="1024.5" y="734.0664">执行构造列表</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1108.5" x2="1395" y1="728.0825" y2="728.0825"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="743" y="795.9268">void destroy##argNames##ConstructorTables();</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="738" x2="1024.5" y1="770.3228" y2="770.3228"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="1024.5" y="776.3066">执行销毁列表</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1108.5" x2="1395" y1="770.3228" y2="770.3228"/></g><!--MD5=[eef534a8f2e45bc409ad3ff2225f1f19]
class FEAElementTwoD--><g id="elem_FEAElementTwoD"><rect fill="#F1F1F1" height="48" id="FEAElementTwoD" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="146" x="1084.5" y="66.5"/><ellipse cx="1099.5" cy="82.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1098.0781,87.8594 Q1096.2188,87.8594 1095.125,86.4688 Q1094.0313,85.0781 1094.0313,82.0938 Q1094.0313,79.5625 1095.1953,77.9063 Q1096.3594,76.25 1098.3438,76.25 Q1099.8125,76.25 1100.2813,76.375 Q1100.75,76.5781 1100.75,76.5781 Q1100.75,76.5781 1100.75,76.5078 Q1100.75,76.4375 1101.3594,75.5156 L1102.4063,79.1719 L1101.0781,79.5781 Q1100.6094,78.0313 1099.9453,77.3672 Q1099.2813,76.7031 1098.2188,76.7031 Q1097.8281,76.7031 1097.0625,78.2344 Q1096.2969,79.7656 1096.2969,82.0156 Q1096.2969,84.4844 1096.9609,85.875 Q1097.625,87.2656 1098.1563,87.2656 Q1099.2188,87.2656 1099.9766,86.5 Q1100.7344,85.7344 1101.0781,84.0781 L1102.4063,84.6719 Q1102.0781,86.0781 1101.1797,86.9688 Q1100.2813,87.8594 1098.0781,87.8594 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="1113.5" y="88.9839">FEAElementTwoD</text><line style="stroke:#181818;stroke-width:0.5;" x1="1085.5" x2="1229.5" y1="98.5" y2="98.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="1085.5" x2="1229.5" y1="106.5" y2="106.5"/></g><!--MD5=[f119b729bfff7e6ee6686b9733dbbfb4]
class FEAElementThreeD--><g id="elem_FEAElementThreeD"><rect fill="#F1F1F1" height="48" id="FEAElementThreeD" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="158" x="1265.5" y="66.5"/><ellipse cx="1280.5" cy="82.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1279.0781,87.8594 Q1277.2188,87.8594 1276.125,86.4688 Q1275.0313,85.0781 1275.0313,82.0938 Q1275.0313,79.5625 1276.1953,77.9063 Q1277.3594,76.25 1279.3438,76.25 Q1280.8125,76.25 1281.2813,76.375 Q1281.75,76.5781 1281.75,76.5781 Q1281.75,76.5781 1281.75,76.5078 Q1281.75,76.4375 1282.3594,75.5156 L1283.4063,79.1719 L1282.0781,79.5781 Q1281.6094,78.0313 1280.9453,77.3672 Q1280.2813,76.7031 1279.2188,76.7031 Q1278.8281,76.7031 1278.0625,78.2344 Q1277.2969,79.7656 1277.2969,82.0156 Q1277.2969,84.4844 1277.9609,85.875 Q1278.625,87.2656 1279.1563,87.2656 Q1280.2188,87.2656 1280.9766,86.5 Q1281.7344,85.7344 1282.0781,84.0781 L1283.4063,84.6719 Q1283.0781,86.0781 1282.1797,86.9688 Q1281.2813,87.8594 1279.0781,87.8594 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="1294.5" y="88.9839">FEAElementThreeD</text><line style="stroke:#181818;stroke-width:0.5;" x1="1266.5" x2="1422.5" y1="98.5" y2="98.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="1266.5" x2="1422.5" y1="106.5" y2="106.5"/></g><path d="M1431.5,357 L1431.5,420.1404 L967,321.6802 L1431.5,428.1404 L1431.5,491.2808 A0,0 0 0 0 1431.5,491.2808 L1773.5,491.2808 A0,0 0 0 0 1773.5,491.2808 L1773.5,367 L1763.5,357 L1431.5,357 A0,0 0 0 0 1431.5,357 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M1763.5,357 L1763.5,367 L1773.5,367 L1763.5,357 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="91" x="1437.5" y="376.8979">宏代码，定义了</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="262" x="1437.5" y="394.6523">1 静态变量 argNames##ConstructorTablePtr_</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="321" x="1437.5" y="412.4067">2 静态函数 construct##argNames##ConstructorTables()</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="310" x="1437.5" y="430.1611">3 静态函数 destroy##argNames##ConstructorTables()</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="85" x="1437.5" y="447.9155">4 nested class</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="306" x="1437.5" y="465.6699">该类的名字通过嵌入用户定义的argNames得到，如下</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="220" x="1437.5" y="483.4243">add##argNames##ConstructorToTable</text><path d="M1431.5,501.2808 L1431.5,591.0527 L1162,704.9624 L1431.5,599.0527 L1431.5,688.8247 A0,0 0 0 0 1431.5,688.8247 L1829.5,688.8247 A0,0 0 0 0 1829.5,688.8247 L1829.5,511.2808 L1819.5,501.2808 L1431.5,501.2808 A0,0 0 0 0 1431.5,501.2808 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M1819.5,501.2808 L1819.5,511.2808 L1829.5,511.2808 L1819.5,501.2808 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="103" x="1437.5" y="521.1787">在New函数中调用</text><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="252" x="1437.5" y="538.9331">所有的继承类必须按照同样的形参去构造</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="4" x="1437.5" y="556.6875"> </text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="361" x="1453.5" y="574.4419">typename SpaceDimensionConstructorTable::iterator cstrIter =</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="323" x="1453.5" y="592.1963">SpaceDimensionConstructorTablePtr_-&gt;find(dimension);</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="237" x="1453.5" y="609.9507">std::unique_ptr&lt;FEAElementBase&gt; ptr =</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="4" x="1469.5" y="627.7051">(</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="251" x="1485.5" y="645.4595">((cstrIter-&gt;second))(dimension, name, m, g)</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="1469.5" y="663.2139">);</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="56" x="1453.5" y="680.9683">return ptr;</text><path d="M369.5,472.5 L369.5,518.0088 A0,0 0 0 0 369.5,518.0088 L684.5,518.0088 A0,0 0 0 0 684.5,518.0088 L684.5,499.2544 L741,747.2026 L684.5,491.2544 L684.5,482.5 L674.5,472.5 L369.5,472.5 A0,0 0 0 0 369.5,472.5 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M674.5,472.5 L674.5,482.5 L684.5,482.5 L674.5,472.5 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="259" x="375.5" y="492.3979">baseType::argNames##ConstructorTablePtr_</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="278" x="391.5" y="510.1523">= new baseType::argNames##ConstructorTable;</text><path d="M369.5,528.0088 L369.5,573.5176 A0,0 0 0 0 369.5,573.5176 L701.5,573.5176 A0,0 0 0 0 701.5,573.5176 L701.5,554.7632 L741,789.4429 L701.5,546.7632 L701.5,538.0088 L691.5,528.0088 L369.5,528.0088 A0,0 0 0 0 369.5,528.0088 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M691.5,528.0088 L691.5,538.0088 L701.5,538.0088 L691.5,528.0088 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="302" x="375.5" y="547.9067">delete baseType::argNames##ConstructorTablePtr_;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="311" x="375.5" y="565.6611">baseType::argNames##ConstructorTablePtr_ = NULL;</text><!--MD5=[cdf6e41f4a7075f397c51be75efb1004]
class add##argNames##ConstructorToTable--><g id="elem_add##argNames##ConstructorToTable"><rect codeLine="66" fill="#F1F1F1" height="166.7207" id="add##argNames##ConstructorToTable" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="319" x="548" y="7"/><ellipse cx="581" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M579.5781,28.3594 Q577.7188,28.3594 576.625,26.9688 Q575.5313,25.5781 575.5313,22.5938 Q575.5313,20.0625 576.6953,18.4063 Q577.8594,16.75 579.8438,16.75 Q581.3125,16.75 581.7813,16.875 Q582.25,17.0781 582.25,17.0781 Q582.25,17.0781 582.25,17.0078 Q582.25,16.9375 582.8594,16.0156 L583.9063,19.6719 L582.5781,20.0781 Q582.1094,18.5313 581.4453,17.8672 Q580.7813,17.2031 579.7188,17.2031 Q579.3281,17.2031 578.5625,18.7344 Q577.7969,20.2656 577.7969,22.5156 Q577.7969,24.9844 578.4609,26.375 Q579.125,27.7656 579.6563,27.7656 Q580.7188,27.7656 581.4766,27 Q582.2344,26.2344 582.5781,24.5781 L583.9063,25.1719 Q583.5781,26.5781 582.6797,27.4688 Q581.7813,28.3594 579.5781,28.3594 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="247" x="599" y="29.4839">add##argNames##ConstructorToTable</text><line style="stroke:#181818;stroke-width:0.5;" x1="549" x2="866" y1="39" y2="39"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="307" x="554" y="82.1641">unique_ptr&lt;baseType&gt; New##baseType argList;</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="549" x2="582.5" y1="56.5601" y2="56.5601"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="250" x="582.5" y="62.5439">构造封闭类对象，调用封闭类的New方法</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="832.5" x2="866" y1="56.5601" y2="56.5601"/><ellipse cx="559" cy="119.4204" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="261" x="568" y="124.4043">add##argNames##ConstructorToTable();</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="549" x2="614.5" y1="98.8003" y2="98.8003"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="614.5" y="104.7842">将上述的指针放入到KV表格中</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="800.5" x2="866" y1="98.8003" y2="98.8003"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="291" x="554" y="166.6445">void add##argNames##ConstructorToTable();</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="549" x2="621.5" y1="141.0405" y2="141.0405"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="172" x="621.5" y="147.0244">释放指向KV表格指针的内存</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="793.5" x2="866" y1="141.0405" y2="141.0405"/></g><path d="M6,52.5 L6,80.2544 A0,0 0 0 0 6,80.2544 L386,80.2544 A0,0 0 0 0 386,80.2544 L386,70.5 L552,75.6802 L386,62.5 L386,62.5 L376,52.5 L6,52.5 A0,0 0 0 0 6,52.5 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M376,52.5 L376,62.5 L386,62.5 L376,52.5 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="359" x="12" y="72.3979">return unique_ptr&lt;baseType&gt;((baseType##Type::New parList))</text><path d="M6,90.2544 L6,118.0088 A0,0 0 0 0 6,118.0088 L513,118.0088 A0,0 0 0 0 513,118.0088 L513,108.2544 L552,117.9204 L513,100.2544 L513,100.2544 L503,90.2544 L6,90.2544 A0,0 0 0 0 6,90.2544 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M503,90.2544 L503,100.2544 L513,100.2544 L503,90.2544 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="486" x="12" y="110.1523">argNames##ConstructorTablePtr_-&gt;intsert(std::make_pair(lookup, New##baseType))</text><!--MD5=[c4fcd565a633d88658a4d0cdc01548ac]
link FEAElementOneD to FEAElementBase--><g id="link_FEAElementOneD_FEAElementBase"><path codeLine="2" d="M980.33,114.61 C985.61,139.89 994.72,183.49 1005.09,233.13 " fill="none" id="FEAElementOneD-to-FEAElementBase" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1011.97,231.8,1009.21,252.81,998.26,234.66,1011.97,231.8" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#000000" points="1008.5225,218.7715,1009.5496,209.3166,1003.796,210.5186,1008.5225,218.7715" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="26" x="1016.5" y="219.8979">继承</text></g><!--MD5=[236edde46c0a2015b183b6f2dbda6c98]
link FEAElementTwoD to FEAElementBase--><g id="link_FEAElementTwoD_FEAElementBase"><path codeLine="3" d="M1152.67,114.61 C1147.39,139.89 1138.28,183.49 1127.91,233.13 " fill="none" id="FEAElementTwoD-to-FEAElementBase" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1134.74,234.66,1123.79,252.81,1121.03,231.8,1134.74,234.66" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#000000" points="1136.4775,218.7715,1141.204,210.5186,1135.4504,209.3166,1136.4775,218.7715" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="26" x="1146.5" y="219.8979">继承</text></g><!--MD5=[f5479d2b0eac9b26c8a24b2fe70c23ff]
link FEAElementThreeD to FEAElementBase--><g id="link_FEAElementThreeD_FEAElementBase"><path codeLine="4" d="M1329.75,114.61 C1313.33,140.34 1284.79,185.04 1252.41,235.77 " fill="none" id="FEAElementThreeD-to-FEAElementBase" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1258.19,239.72,1241.53,252.81,1246.39,232.18,1258.19,239.72" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#000000" points="1271.8097,218.0917,1279.1537,212.0489,1274.1992,208.8863,1271.8097,218.0917" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="26" x="1283.5" y="219.8979">继承</text></g><!--MD5=[ec15ca3de47b6246df7f63de9c68399c]
link add##argNames##ConstructorToTable to FEAElementBase--><g id="link_add##argNames##ConstructorToTable_FEAElementBase"><path codeLine="82" d="M775.66,174.18 C792.64,194.78 811.81,218.04 832.02,242.55 " fill="none" id="add##argNames##ConstructorToTable-to-FEAElementBase" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="840.43,252.75,839.6981,245.5761,832.7946,243.4925,833.5265,250.6664,840.43,252.75" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#000000" points="822.6804,217.7353,819.1948,208.8865,814.6593,212.6253,822.6804,217.7353" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="26" x="828.5" y="219.8979">组合</text></g><!--MD5=[40e0202f699c5300b3d7372e9539da67]
@startuml

FEAElementOneD - -|> FEAElementBase:继承 >
FEAElementTwoD - -|> FEAElementBase:继承 >
FEAElementThreeD - -|> FEAElementBase:继承 >

class FEAElementBase {
    ..macros..
    declareRunTimeNewSelectionTable
    'declareRunTimeElementNodeTable
    'declareRunTimeElementNodeDOFTable
    ..方法1:在KV表格中查找子类构造函数指针..
    + std::unique_ptr<FEAElementBase> {static} New(\nconst std::string & dim,\nconst std::string & name,\nconst MaterialEle & m,\nconst GeometryEle & g\n);
    ..方法：接口..
    # void {abstract} infoAboutThisElement() = 0;
    # void {abstract} constructGeometry() = 0;
    # void {abstract} constructBaseMatrix() = 0;
    # void {abstract} transformToGlobal() = 0;
    # void {abstract} numberSequence() = 0;
    ..构造函数指针..
    typedef unique_ptr<baseType> (*argNames##ConstructorPtr)argList;
    ..子类构造函数指针KV列表(K:V->名字:构造函数指针)..
    typedef std::unordered_map<std::string,argNames##ConstructorPtr>     argNames##ConstructorTable;
    ..定义数据..
    argNames##ConstructorTable* {static} argNames##ConstructorTablePtr_; 
    ..执行构造列表..
    void {static} construct##argNames##ConstructorTables();
    ..执行销毁列表..
    void {static} destroy##argNames##ConstructorTables();
}

note right of FEAElementBase::declareRunTimeNewSelectionTable
宏代码，定义了
1 静态变量 argNames##ConstructorTablePtr_
2 静态函数 construct##argNames##ConstructorTables()
3 静态函数 destroy##argNames##ConstructorTables()
4 nested class
该类的名字通过嵌入用户定义的argNames得到，如下
add##argNames##ConstructorToTable
end note


note right of FEAElementBase::argNames##ConstructorTablePtr_
在New函数中调用
**所有的继承类必须按照同样的形参去构造**

    typename SpaceDimensionConstructorTable::iterator cstrIter =
    SpaceDimensionConstructorTablePtr_->find(dimension);
    std::unique_ptr<FEAElementBase> ptr = 
        (
            ((cstrIter->second))(dimension, name, m, g)
        );
    return ptr;
end note

note left of FEAElementBase::construct##argNames##ConstructorTables
    baseType::argNames##ConstructorTablePtr_ 
        = new baseType::argNames##ConstructorTable;
end note

note left of FEAElementBase::destroy##argNames##ConstructorTables()
    delete baseType::argNames##ConstructorTablePtr_;
    baseType::argNames##ConstructorTablePtr_ = NULL;
end note

class add##argNames##ConstructorToTable{
    ..构造封闭类对象，调用封闭类的New方法..
    unique_ptr<baseType> {static} New##baseType argList;
    ..将上述的指针放入到KV表格中..
    + add##argNames##ConstructorToTable();
    ..释放指向KV表格指针的内存..
    void {abstract} add##argNames##ConstructorToTable();
}

note left of add##argNames##ConstructorToTable::New##baseType
    return unique_ptr<baseType>((baseType##Type::New parList))
end note
note left of add##argNames##ConstructorToTable::add##argNames##ConstructorToTable
    argNames##ConstructorTablePtr_->intsert(std::make_pair(lookup, New##baseType))
end note

"add##argNames##ConstructorToTable" - -* FEAElementBase:组合 >
@enduml

@startuml

FEAElementOneD - -|> FEAElementBase:继承 >
FEAElementTwoD - -|> FEAElementBase:继承 >
FEAElementThreeD - -|> FEAElementBase:继承 >

class FEAElementBase {
    ..macros..
    declareRunTimeNewSelectionTable
    ..方法1:在KV表格中查找子类构造函数指针..
    + std::unique_ptr<FEAElementBase> {static} New(\nconst std::string & dim,\nconst std::string & name,\nconst MaterialEle & m,\nconst GeometryEle & g\n);
    ..方法：接口..
    # void {abstract} infoAboutThisElement() = 0;
    # void {abstract} constructGeometry() = 0;
    # void {abstract} constructBaseMatrix() = 0;
    # void {abstract} transformToGlobal() = 0;
    # void {abstract} numberSequence() = 0;
    ..构造函数指针..
    typedef unique_ptr<baseType> (*argNames##ConstructorPtr)argList;
    ..子类构造函数指针KV列表(K:V->名字:构造函数指针)..
    typedef std::unordered_map<std::string,argNames##ConstructorPtr>     argNames##ConstructorTable;
    ..定义数据..
    argNames##ConstructorTable* {static} argNames##ConstructorTablePtr_; 
    ..执行构造列表..
    void {static} construct##argNames##ConstructorTables();
    ..执行销毁列表..
    void {static} destroy##argNames##ConstructorTables();
}

note right of FEAElementBase::declareRunTimeNewSelectionTable
宏代码，定义了
1 静态变量 argNames##ConstructorTablePtr_
2 静态函数 construct##argNames##ConstructorTables()
3 静态函数 destroy##argNames##ConstructorTables()
4 nested class
该类的名字通过嵌入用户定义的argNames得到，如下
add##argNames##ConstructorToTable
end note


note right of FEAElementBase::argNames##ConstructorTablePtr_
在New函数中调用
**所有的继承类必须按照同样的形参去构造**

    typename SpaceDimensionConstructorTable::iterator cstrIter =
    SpaceDimensionConstructorTablePtr_->find(dimension);
    std::unique_ptr<FEAElementBase> ptr = 
        (
            ((cstrIter->second))(dimension, name, m, g)
        );
    return ptr;
end note

note left of FEAElementBase::construct##argNames##ConstructorTables
    baseType::argNames##ConstructorTablePtr_ 
        = new baseType::argNames##ConstructorTable;
end note

note left of FEAElementBase::destroy##argNames##ConstructorTables()
    delete baseType::argNames##ConstructorTablePtr_;
    baseType::argNames##ConstructorTablePtr_ = NULL;
end note

class add##argNames##ConstructorToTable{
    ..构造封闭类对象，调用封闭类的New方法..
    unique_ptr<baseType> {static} New##baseType argList;
    ..将上述的指针放入到KV表格中..
    + add##argNames##ConstructorToTable();
    ..释放指向KV表格指针的内存..
    void {abstract} add##argNames##ConstructorToTable();
}

note left of add##argNames##ConstructorToTable::New##baseType
    return unique_ptr<baseType>((baseType##Type::New parList))
end note
note left of add##argNames##ConstructorToTable::add##argNames##ConstructorToTable
    argNames##ConstructorTablePtr_->intsert(std::make_pair(lookup, New##baseType))
end note

"add##argNames##ConstructorToTable" - -* FEAElementBase:组合 >
@enduml

PlantUML version 1.2022.7(Tue Aug 23 01:01:30 CST 2022)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) Client VM
Default Encoding: GBK
Language: zh
Country: CN
--></g></svg>